import kotlin.collections.List;
import pl.msiwak.multiplatform.commonObject.Exercise;
import pl.msiwak.multiplatform.commonObject.ExerciseType;
import pl.msiwak.multiplatform.commonObject.ResultData;

CREATE TABLE ExerciseDB (
    id TEXT NOT NULL,
    categoryId TEXT NOT NULL,
    exerciseTitle    TEXT NOT NULL,
    results     TEXT AS List<ResultData>    NOT NULL,
    exerciseType TEXT AS ExerciseType NOT NULL
);

updateExercise:
INSERT OR REPLACE INTO ExerciseDB(id, categoryId, exerciseTitle, results, exerciseType)
VALUES (?, ?,?,?, ?);

insertExercise:
INSERT INTO ExerciseDB(id, categoryId, exerciseTitle, results, exerciseType)
VALUES (?, ?,?,?, ?);

removeAllExercises:
DELETE FROM ExerciseDB;

removeExercise:
DELETE FROM ExerciseDB
WHERE id = ?;

selectFromExercise:
SELECT * FROM ExerciseDB
WHERE id = ?;

selectAllFromExercise:
SELECT * FROM ExerciseDB;

CREATE TABLE CategoryDB (
    id TEXT NOT NULL,
    name    TEXT NOT NULL,
    exercises     TEXT AS List<Exercise>    NOT NULL,
    exerciseType TEXT AS ExerciseType NOT NULL
);

updateCategory:
INSERT OR REPLACE INTO CategoryDB(id, name, exercises, exerciseType)
VALUES (?, ?,?, ?);

insertCategory:
INSERT INTO CategoryDB(id, name, exercises, exerciseType)
VALUES (?, ?,?, ?);

removeAllCategories:
DELETE FROM CategoryDB;

removeCategory:
DELETE FROM CategoryDB
WHERE id = ?;

selectFromCategory:
SELECT * FROM CategoryDB
WHERE id = ?;

selectAllFromCategory:
SELECT * FROM CategoryDB;

selectCategoryWithExercise:
SELECT *
FROM CategoryDB
INNER JOIN ExerciseDB ON CategoryDB.id = ExerciseDB.categoryId
WHERE CategoryDB.id=?;

selectAllCategoriesWithExercise:
SELECT *
FROM CategoryDB JOIN ExerciseDB;
